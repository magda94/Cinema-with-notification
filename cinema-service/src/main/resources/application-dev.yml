spring:
  datasource:
    url: jdbc:postgresql://postgres-cinema:5432/cinemaDB
    username: postgres
    password: postgres
    config:
      activate:
        on-profile: dev
  jpa:
    hibernate:
      ddl-auto: update
      show-sql: true
      properties:
        hibernate:
          format_sql: true
          dialect: org.hibernate.dialect.PostgreSQL81Dialect
  kafka:
    consumer:
      bootstrap-servers: kafka-cinema:9092
      group-id: cinema
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: 'com.cinema.service.kafka.dto'
    producer:
      bootstrap-servers: kafka-cinema:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
com:
  cinema:
    service:
      user: user-service:8080
      film: film-service:8081
      kafka:
        request:
          topic: notification-request
        response:
          topic: notification-response