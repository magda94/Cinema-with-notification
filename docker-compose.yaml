version: '3.5'

services:
  # user-service
  user-service:
    container_name: user-service
    build: ./user-service
    ports:
      - "8080:8080"
    networks:
      - postgres-user

  # film-service
  film-service:
    container_name: film-service
    build: ./film-service
    ports:
      - "8081:8081"
    networks:
      - film-mongodb

  # cinema-service
  cinema-service:
    container_name: cinema-service
    build: ./cinema-service
    ports:
      - "8082:8082"
    networks:
      - postgres-cinema
      - postgres-user
      - film-mongodb
      - kafka-cinema

    # postgresSQL - user-service
  postgres-user:
    container_name: user_postgres_container
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: userDB
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres-user
    restart: unless-stopped
    volumes:
      - ./scripts/docker_postgres_init_user.sql:/docker-entrypoint-initdb.d/docker_postgres_init_user.sql


  # postgresSQL - cinema
  postgres-cinema:
    container_name: cinema_postgres_container
    image: postgres:14.1-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: cinemaDB
      PGDATA: /data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres-cinema
    restart: unless-stopped
    volumes:
      - ./scripts/docker_postgres_init_cinema.sql:/docker-entrypoint-initdb.d/docker_postgres_init_cinema.sql

  # pgAdmin
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres-user
      - postgres-cinema
    restart: unless-stopped

  # mongoDB
  film-mongodb:
    container_name: mongoDB
    image: mongo:5.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    networks:
      - film-mongodb
    restart: unless-stopped

  # zookeeper
  zookeeper-cinema:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-cinema
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-cinema

  # kafka
  kafka-cinema:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-cinema
    depends_on:
      - zookeeper-cinema
    ports:
      - "29092:29092" # because 9092 is busy for connection from container and it's needed to connect from single app
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-cinema:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-cinema:9092, PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-cinema

networks:
  postgres-user:
    driver: bridge
  film-mongodb:
    driver: bridge
  postgres-cinema:
    driver: bridge
  kafka-cinema:
    driver: bridge

volumes:
  postgres-user:
  postgres-cinema:
  pgadmin: